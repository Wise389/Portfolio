@model CarDealership.UI.Models.AddVehicleViewModel
@{
    ViewBag.Title = "Add Vehicle";
}
<style>
    .label {
        font-weight: bold;
        /*font-size:19px;*/
    }
</style>
@* Nav bar needs to change for admin access *@
@using (Html.BeginForm("AddVehicle", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(false, "", new { @style = "color: red" })
    <div class="container-fluid">
        <h2 style="padding-top:20px">@ViewBag.Title</h2>
        <h3>@ViewBag.Message</h3>
        <div class="row">
            <div class="col-xs-5 col-sm-5 col-md-5 col-lg-4">
                <form style="max-width: 100%; align-content: flex-start">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Vehicle.Make, new { @class = "label" })
                        @Html.DropDownListFor(model => model.Vehicle.Make.MakeId, Model.Makes, "Select Make", new { @class = "form-control", @style = "justify-content:start", @id = "AssociatedMake" })
                        <span class="text-danger">@Html.ValidationMessageFor(o => o.Vehicle.Make.MakeId, "Make Name Required")</span>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Vehicle.Condition, new { @class = "label" })
                        @Html.DropDownListFor(m => m.Vehicle.Condition,
                            new SelectList(Enum.GetValues(typeof(CarDealership.Models.Enumerations.Condition))),
                            "Select Condition", new { @class = "form-control", @style = "justify-content:start" })
                        <span class="text-danger">@Html.ValidationMessageFor(o => o.Vehicle.Condition)</span>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Vehicle.Year, new { @class = "label" })
                        @Html.TextBoxFor(m => m.Vehicle.Year, new { @class = "form-control" })
                        <span class="text-danger">@Html.ValidationMessageFor(o => o.Vehicle.Year)</span>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Vehicle.Color, new { @class = "label" })
                        @Html.DropDownListFor(m => m.Vehicle.Color,
                            new SelectList(Enum.GetValues(typeof(CarDealership.Models.Enumerations.Color))),
                            "Select Color", new { @class = "form-control", @style = "justify-content:start" })
                        <span class="text-danger">@Html.ValidationMessageFor(o => o.Vehicle.Color)</span>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Vehicle.Mileage, new { @class = "label" })
                        @Html.TextBoxFor(m => m.Vehicle.Mileage, new { @class = "form-control" })
                        <span class="text-danger">@Html.ValidationMessageFor(o => o.Vehicle.Mileage)</span>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Vehicle.MSRP, new { @class = "label" })
                        @Html.TextBoxFor(m => m.Vehicle.MSRP, new { @class = "form-control" })
                        <span class="text-danger">@Html.ValidationMessageFor(o => o.Vehicle.MSRP)</span>
                    </div>

                </form>
            </div>
            <div class="col-xs-5 col-sm-5 col-md-5 col-lg-4">
                <div class="form-group">
                    @Html.LabelFor(m => m.Vehicle.Model, new { @class = "label" })
                    @Html.DropDownListFor(model => model.Vehicle.Model.ModelId, Model.Models, "Select Model", new { @class = "form-control", @style = "justify-content:start", @id = "AssociatedModel" })
                    <span class="text-danger">@Html.ValidationMessageFor(o => o.Vehicle.Model.ModelId, "Model Name Required")</span>
                    @*@Html.HiddenFor(m=> m.Vehicle.Model.ModelId)*@
                </div>
                <div class="form-group">
                    <label class="label">Body Style</label>
                    @Html.DropDownListFor(m => m.Vehicle.BodyStyle,
                        new SelectList(Enum.GetValues(typeof(CarDealership.Models.Enumerations.BodyStyle))),
                        "Select Body Style", new { @class = "form-control", @style = "justify-content:start" })
                    <span class="text-danger">@Html.ValidationMessageFor(o => o.Vehicle.BodyStyle)</span>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Vehicle.Transmission, new { @class = "label" })
                    @Html.DropDownListFor(m => m.Vehicle.Transmission,
                        new SelectList(Enum.GetValues(typeof(CarDealership.Models.Enumerations.Transmission))),
                        "Select Transmission", new { @class = "form-control", @style = "justify-content:start" })
                    <span class="text-danger">@Html.ValidationMessageFor(o => o.Vehicle.Transmission)</span>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Vehicle.Interior, new { @class = "label" })
                    @Html.DropDownListFor(m => m.Vehicle.Interior,
                        new SelectList(Enum.GetValues(typeof(CarDealership.Models.Enumerations.Interior))),
                        "Select Condition", new { @class = "form-control", @style = "justify-content:start" })
                    <span class="text-danger">@Html.ValidationMessageFor(o => o.Vehicle.Interior)</span>
                </div>
                <div class="form-group">
                    <label class="label">VIN #</label>
                    @Html.TextBoxFor(m => m.Vehicle.VIN, new { @class = "form-control" })
                    <span class="text-danger">@Html.ValidationMessageFor(o => o.Vehicle.VIN)</span>
                </div>
                <div class="form-group">
                    <label class="label">Sale Price</label>
                    @Html.TextBoxFor(m => m.Vehicle.SalesPrice, new { @class = "form-control" })
                    <span class="text-danger">@Html.ValidationMessageFor(o => o.Vehicle.SalesPrice)</span>
                </div>
            </div>

        </div>
        @* Description needs to span the width of both columns *@
        <div class="row">
            <div class="col-xs-10 col-sm-10 col-md-10 col-lg-8">
                <div class="form-group" style="max-width: 100%">
                    @Html.LabelFor(m => m.Vehicle.Description, new { @class = "label" })
                    @Html.TextAreaFor(m => m.Vehicle.Description, new { @id = "Description", @class = "form-control", @rows = "5" })
                    <span class="text-danger">@Html.ValidationMessageFor(o => o.Vehicle.Description)</span>
                </div>
            </div>
        </div>
        <label class="label">Picture</label>
        <div class="col-md-12">
            <input type='file' onchange="readURL(this);" name="file" required="" />
            <img id="blah" src="#" alt="" />
        </div>
        <br>
        <button type="submit" class="btn btn-primary btn-sm">Save</button>

    </div>
}

<script>
    $(document).ready(function () {
        $("#AssociatedMake").change(function () {
            $.ajax({
                type: "GET",
                url: "https://localhost:44380/associatedModels" + "?MakeId=" + $("#AssociatedMake").val(),
                dataType: 'json',
                success: function (modelList) {
                    $("#AssociatedModel").empty();
                    var el = $("#AssociatedModel");
                    $.each(modelList, function (i, item) {
                        el.append($("<option></option>")
                            .attr("value", item.Value).text(item.Text));
                    });

                },
                error: function (jqXHR, ajaxOptions, thrownError) {
                    alert("Status: " + ajaxOptions); alert("Error: " + thrownError);
                }
            });

            //Get value of selected make id
            //pass make id to api
            //api gets all associated models to the make id
            //return all models associated to the make
            //js recieves from service to update the existing drop down
        });

    });

    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#blah')
                    .attr('src', e.target.result)
                    .width(200)
                    .height(250);
            };
            reader.readAsDataURL(input.files[0]);
        }
    }

</script>